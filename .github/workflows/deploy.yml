name: Stealth Bot Runner

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
      execution_mode:
        description: 'Bot Execution Mode'
        required: true
        default: 'multi'
        type: choice
        options:
          - single
          - continuous
          - firefox
          - multi
      execution_time:
        description: 'Execution Time (minutes)'
        required: false
        default: '30'
      sleep_time:
        description: 'Sleep Time (minutes)'
        required: false
        default: '5'

env:
  EXEC_MODE: ${{ github.event.inputs.execution_mode || 'multi' }}
  EXEC_TIME: ${{ github.event.inputs.execution_time || '30' }}
  SLEEP_TIME: ${{ github.event.inputs.sleep_time || '5' }}

defaults:
  run:
    shell: bash

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      exec_mode: ${{ env.EXEC_MODE }}
    steps:
      - name: Print Execution Mode
        run: echo "Running mode: $EXEC_MODE"

  shared:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y xvfb wget curl jq unzip

          # Firefox Fallback
          if ! sudo snap install firefox; then
            wget -O firefox.tar.bz2 "https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-US"
            tar -xjf firefox.tar.bz2
            sudo mv firefox /opt/
            sudo ln -sf /opt/firefox/firefox /usr/local/bin/firefox
            rm firefox.tar.bz2
          fi

          # GeckoDriver Latest
          GECKO_VER=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r .tag_name)
          wget -O geckodriver.tar.gz "https://github.com/mozilla/geckodriver/releases/download/$GECKO_VER/geckodriver-$GECKO_VER-linux64.tar.gz"
          tar -xzf geckodriver.tar.gz
          sudo mv geckodriver /usr/local/bin/
          chmod +x /usr/local/bin/geckodriver
          rm geckodriver.tar.gz

      - name: Install Python Dependencies
        run: |
          pip install --upgrade pip
          pip install -r project-requirements.txt || pip install -r project_requirements.txt || true

      - name: Log Setup Done
        run: echo "Setup complete at $(date)" > logs/setup_status.log

  firefox-bot:
    needs: shared
    runs-on: ubuntu-latest
    if: env.EXEC_MODE == 'firefox' || env.EXEC_MODE == 'multi'
    steps:
      - uses: actions/checkout@v4
      - name: Run Firefox Bot in Loop (if script exists)
        run: |
          if [ -f multi_browser_stealth_bot.py ]; then
            export DISPLAY=:99
            Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
            while true; do
              echo "Running Firefox Bot..."
              python multi_browser_stealth_bot.py --categories x_links --browser firefox --headless --delay-min 2 --delay-max 6 || true
              echo "Sleeping 2m"
              sleep 120
            done
          else
            echo "multi_browser_stealth_bot.py not found. Skipping."
          fi

  continuous-bot:
    needs: shared
    runs-on: ubuntu-latest
    if: env.EXEC_MODE == 'continuous' || env.EXEC_MODE == 'multi'
    steps:
      - uses: actions/checkout@v4
      - name: Run Continuous Bot in Loop (if script exists)
        run: |
          if [ -f continuous_stealth_bot.py ]; then
            while true; do
              echo "Running Continuous Bot..."
              python continuous_stealth_bot.py --mode single --execution-time "$EXEC_TIME" --sleep-time "$SLEEP_TIME" || true
              sleep 120
            done
          else
            echo "continuous_stealth_bot.py not found. Skipping."
          fi

  single-bot:
    needs: shared
    runs-on: ubuntu-latest
    if: env.EXEC_MODE == 'single' || github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v4
      - name: Run Single Bot in Loop (if script exists)
        run: |
          if [ -f ultimate_stealth_bot.py ]; then
            while true; do
              echo "Running Single Bot..."
              python ultimate_stealth_bot.py --categories x_links --delay-min 3 --delay-max 8 || true
              sleep 120
            done
          else
            echo "ultimate_stealth_bot.py not found. Skipping."
          fi

  upload-logs:
    needs: [firefox-bot, continuous-bot, single-bot]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: stealth-bot-logs-${{ github.run_number }}
          path: logs/
          if-no-files-found: ignore
          retention-days: 5

      - name: Cleanup Zombie Processes
        run: |
          pkill -f python || true
          pkill -f firefox || true
          pkill -f Xvfb || true
